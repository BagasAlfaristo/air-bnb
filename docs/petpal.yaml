openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/WFHADIT/PETPAL/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/BAGASAPUTRA31/PetPal-APP/1.0.0
  - description: SwaggerHub API Auto Mocking
    url: Server
info:
  version: "1.0.0"
  title: PetCare
  description: Application for ordering products and consulting veterinarians
tags:
  - name: user
    description: User operations
  - name: admin
    description: Admin operations
  - name: product
    description: Product operations
  - name: consultation
    description: Consultation operations
  - name: chat
    description: Chat operations
  - name: clinic
    description: Clinic operations
  - name: doctor
    description: Doctor operations
  - name: order
    description: Order operations
  - name: payment
    description: Payment opertions
paths:
  /users/register:
    post:
      tags:
        - user
      description: Register user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
            example:
              full_name: "user"
              email: "user@gmail.com"
              password: "password"
      responses:
        "201":
          description: Registration Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: Registration successful! You can now log in to your account.
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

  /users/login:
    post:
      tags:
        - user
      description: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              email: "user@gmail.com"
              password: "password"
      responses:
        "200":
          description: Login Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Login successful! You are now logged in.
                data:
                  id: 1
                  full_name: "user"
                  token: "cunsdhshduhsdhfuhyerolsmklnkdsjbcjdhdgfyegfbcvdmkfirfbncmxn"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

  /users/profile:
    get:
      tags:
        - user
      description: Displays user profile details
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully got profile details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              example:
                code: 200
                message: Profile information loaded successfully.
                data:
                  id: 1
                  profile_picture: "Link Profile Picture"
                  full_name: "User"
                  email: "User@Mail.com"
                  address: "Malang"
                  coordinate: "6.160387,1.262275"
                  phone_number: "08123"
                  password: ""
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

    patch:
      tags:
        - user
      description: Change profile details
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
            example:
              full_name: "User Full Name"
              email: "User@mail.com"
              number_phone: "08123"
              address: "Malang"
              password: "Secret Password"
              profile_picture: "Profile Picture Default"
      responses:
        "200":
          description: Successfully changed profile details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Profile information updated successfully.
        "401":
          $ref: "#/components/responses/401"
        "400":
          $ref: "#/components/responses/400"
        "404":
          description: if page not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Page not found
        "500":
          $ref: "#/components/responses/500"

  /users:
    delete:
      tags:
        - user
      description: Delete user
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully Deleted User
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Your account has been deleted. Thank you for using our service.
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: User Not Found
        "401":
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

  /admins/register:
    post:
      tags:
        - admin
      description: Register admin
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Admin"
            example:
              full_name: "Admin"
              email: "Admin@gmail.com"
              password: "password"
      responses:
        "201":
          description: Registration Was Successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: Registration Was Successfula
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

  /admins/login:
    post:
      tags:
        - admin
      description: Login admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            example:
              email: "admin@gmail.com"
              password: "password"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Login successful
                data:
                  nama: "admin"
                  email: "admin@gmail.com"
                  token: "cunsdhshduhsdhfuhyerolsmklnkdsjbcjdhdgfyegfbcvdmkfirfbncmxn"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

  /admins:
    get:
      tags:
        - admin
      description: Displays admin profile details
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successfully got profile details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Admin"
              example:
                id: 1
                ProfilePicture: "Link Profile Picture"
                FullName: "Admin"
                VetsName: "Vets Admin"
                Email: "Admin@Mail.com"
                Address: "Malang"
                PhoneNumber: "08123"
                Password: ""
        "500":
          $ref: "#/components/responses/500"
    patch:
      tags:
        - admin
      description: Change profile details
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
            example:
              full_name: "User Full Name"
              email: "User@mail.com"
              number_phone: "08123"
              address: "Malang"
              password: "Secret Password"
              profile_picture: "Profile Picture Default"
      responses:
        "200":
          description: Successfully changed profile details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Successfully changed profile details
        "401":
          $ref: "#/components/responses/401"
        "400":
          $ref: "#/components/responses/400"
        "404":
          description: if page not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Page not found
        "500":
          $ref: "#/components/responses/500"

    delete:
      tags:
        - admin
      description: Delete admin
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully Deleted Admin
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Successfully Deleted Admin
        404:
          description: Admin Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Admin Not Found
        "401":
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

  /products:
    post:
      tags:
        - product
      description: Adding New Products
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/product"
            example:
              product_name: "Product A"
              price: 30000
              description: "Deskripsi product A"
              stock: 12
              product_picture: "Link Picture"
      responses:
        "201":
          description: Successfully added product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: Add product successful!
        "401":
          $ref: "#/components/responses/401"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

    get:
      tags:
        - product
      summary: Get all products for user
      description: Gets the list of products displayed to the user
      responses:
        "200":
          description: Successfully got the product list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/product"
              example:
                message: Products retrieved successfully
                data:
                  - id: 1
                    product_picture: "Link picture"
                    product_name: "product A"
                    price: 10000
                  - id: 2
                    product_picture: "Link picture"
                    product_name: "product B"
                    price: 10000
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /clinics:
    get:
      tags:
        - clinic
      summary: Get all clinics
      description: Get all clinics and sort by distance
      responses:
        "200":
          description: Successfully got the clinics list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/clinic"
              example:
                - admin_id: 3
                  clinic_name: "clinic name"
                  open:
                    {
                      id: 3,
                      doctor_id: 5,
                      monday: "true",
                      tuesday: "true",
                      thursday: "true",
                      friday: "true",
                    }
                  service:
                    {
                      vaccinations: "true",
                      mcu: "true",
                      online_consultations: "true",
                    }
                  veterinary: "doctor name"
                  location: "alun-alun"
                  coordinate: "-7.981966354257,112.63094881813343"
                  distance: 2.819896742309485

                - admin_id: 3
                  clinic_name: "clinic name"
                  open:
                    {
                      id: 3,
                      doctor_id: 5,
                      monday: "true",
                      tuesday: "true",
                      wednesday: "false",
                      thursday: "true",
                      friday: "true",
                    }
                  service:
                    { vaccinations: "true", online_consultations: "true" }
                  veterinary: "doctor name"
                  location: "alun-alun"
                  coordinate: "-7.981966354257,112.63094881813343"
                  distance: 2.819896742309485
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /products/{id}:
    get:
      tags:
        - product
      summary: Get Product Details
      description: Get Product Details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully got product details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/product"
              example:
                message: Products retrieved successfully
                data:
                  product_picture: "Link picture"
                  product_name: "product A"
                  price: 10000
                  description: "Deskripsi product A"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Product not found
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

    patch:
      tags:
        - product
      description: Change Product Details
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/product"
            example:
              nama: "product A1"
              harga: 15000
              deskripsi: "Changed product A description"
      responses:
        "200":
          description: Successfully Changed Product Details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Product updated successfully
        "400":
          $ref: "#/components/responses/400"
        "404":
          description: Product Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Product Not Found
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

    delete:
      tags:
        - product
      description: Delete Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully Deleted Product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Product deleted successfully
        "404":
          description: Product Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Product Not Found
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /consultation:
    get:
      tags:
        - consultation
      description: Mendapatkan detail konsultasi
      responses:
        "200":
          description: Berhasil mendapatkan detail konsultasi
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/consultation"
              example:
                message: "Consultations retrieved successfully"
                data:
                  - id: 1
                    user_details:
                      id: 3
                      full_name: "user"
                      profile_picture: "link picture"
                    doctor_details:
                      id: 11
                      full_name: "doctor name"
                      profile_picture: "link picture"
                    service: "medical checkup"
                    transaction_status: "Paid"
                    consultation_status: "In Progress"
                    scheduled_date: "2003-10-10"
                  - id: 2
                    user_details:
                      id: 3
                      full_name: "user"
                      profile_picture: "link picture"
                    doctor_details:
                      id: 11
                      full_name: "doctor name"
                      profile_picture: "link picture"
                    service: "medical checkup"
                    transaction_status: "Paid"
                    consultation_status: "In Progress"
                    scheduled_date: "2003-10-10"
        "404":
          description: Konsultasi tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Konsultasi tidak ditemukan
        "500":
          $ref: "#/components/responses/500"

  /consultation/{id}:
    post:
      tags:
        - consultation
      description: Membuat jadwal konsultasi
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/consultation"
            example:
              scheduled_date: "2003-10-10"
              tipe: "online"
      responses:
        "201":
          description: Berhasil menambahkan jadwal konsultasi
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: Berhasil menambahkan jadwal konsultasi
                data:
                  scheduled_date: "2024-05-28T10:00:00Z"
                  tipe: "online"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

    put:
      tags:
        - consultation
      description: Mengubah detail konsultasi
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/consultation"
            example:
              consultation_status: "In Progress"
      responses:
        "200":
          description: Berhasil mengubah jadwal konsultasi
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Berhasil mengubah jadwal konsultasi
                data:
                  consultation_status: "In Progress"
        "400":
          $ref: "#/components/responses/400"
        "404":
          description: Konsultasi tidak ditemukan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Konsultasi tidak ditemukan
        "500":
          $ref: "#/components/responses/500"

  /chats/{id}:
    post:
      tags:
        - chat
      description: Create chat
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Chat"
            example:
              message: "Halo"
      responses:
        "201":
          description: Message Sent Successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: Chat created successfully
        "401":
          $ref: "#/components/responses/401"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

    get:
      tags:
        - chat
      summary: Get Chat History
      description: Get Chat History
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully Get Chat History
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chat"
              example:
                message: "Chats retrieved successfully"
                data:
                  - id: 6
                    roomchat_id: 1
                    sender:
                      id: 1
                      role: "user"
                      full_name: "user test"
                      profile_picture: "https://air-bnb.s3.ap-southeast-2.amazonaws.com/profilepicture/1717794313_almohada.jpeg"
                    receiver:
                      id: 2
                      role: "admin"
                      full_name: "admin test"
                      profile_picture: "https://air-bnb.s3.ap-southeast-2.amazonaws.com/profilepicture/1717794313_admin.jpeg"
                    message: "Chat"
                    time_stamp: "2024-06-02T05:15:55.312Z"
                  - id: 4
                    roomchat_id: 1
                    sender:
                      id: 1
                      role: "user"
                      full_name: "user test"
                      profile_picture: "https://air-bnb.s3.ap-southeast-2.amazonaws.com/profilepicture/1717794313_almohada.jpeg"
                    receiver:
                      id: 2
                      role: "admin"
                      full_name: "admin test"
                      profile_picture: "https://air-bnb.s3.ap-southeast-2.amazonaws.com/profilepicture/1717794313_admin.jpeg"
                    message: "Chat"
                    time_stamp: "2024-06-02T05:15:55.312Z"

        "404":
          description: Chat History not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Chat History not found
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

    delete:
      tags:
        - chat
      description: Delete Message
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully Delete Message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Chat deleted successfully
        "404":
          description: Message Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: Message Not Found
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /doctors:
    post:
      tags:
        - doctor
      description: Adding Doctor
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Doctor"
            example:
              fukka_name: "Doctor A"
              about: "bla bla"
              price: 30000
              profile_picture: "Deskripsi product A"
              monday: "true"
              tuesday: "true"
              wednesday: "true"
              thursday: "false"
              friday: "true"
              vaccinations: "true"
              operations: "false"
              mcu: "false"
              online_consultations: "true"
      responses:
        "201":
          description: Successfully added doctor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: Doctor added successfully. Thank you.
        "401":
          $ref: "#/components/responses/401"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

    get:
      tags:
        - doctor
      summary: Get all products for user
      description: Gets the list of products displayed to the user
      responses:
        "200":
          description: Successfully got the product list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/product"
              example:
                message: Success get detail doctor profile
                data:
                  id: 1
                  full_name: "Drh. Indra"
                  price: 100000
                  about: "Experience 15 years"
                  profile_picture: "https://air-bnb.s3.ap-southeast-2.amazonaws.com/doctorpicture/1717800282_almohada.jpeg"
                  available_days:
                    monday: "true"
                    wednesday: "true"
                    thursday: "true"
                  service:
                    vaccinations: "true"
                    mcu: "true"
                    online_consultations: "true"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

    delete:
      tags:
        - doctor
      description: Delete doctor
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully Deleted Doctor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 200
                message: Dcotor has been deleted. Thank you for using our service.
        404:
          description: User Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
              example:
                code: 404
                message: User Not Found
        "401":
          $ref: "#/components/responses/401"
        500:
          $ref: "#/components/responses/500"

  /orders:
    post:
      tags:
        - order
      description: Create order
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/order"
            example:
              product_id: 1
              quantity: 1
      responses:
        "201":
          description: Successfully added doctor
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: order created sucessfully
                data:
                  id: 1
                  user_id: 1
                  product_id: 1
                  product_name: "makanan kucing"
                  profile_picture: "www.gambar.com"
                  quantity: 1
                  price: 100000
                  status: "created"
                  invoice_id: "ORDER-09062024-4xxx"
                  payment:
                    id: 1
                    order_id: 1
                    payment_method: "bca"
                    signature_id: "5684bae9-3983-49ea-aecf-5f6aba74xxx"
                    va_number: "1671169xxxx"
        "401":
          $ref: "#/components/responses/401"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

    get:
      tags:
        - order
      description: get order
      security:
        - bearerAuth: []
      responses:
        "200":
          description: orders retrieved sucessfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/product"
              example:
                code: 200
                message: orders retrieved sucessfully
                data:
                  id: 1
                  user_id: 1
                  product_id: 1
                  product_name: "makanan kucing"
                  profile_picture: "www.gambar.com"
                  quantity: 1
                  price: 100000
                  status: "created"
                  invoice_id: "ORDER-09062024-4xxx"
                  payment:
                    id: 1
                    order_id: 1
                    payment_method: "bca"
                    signature_id: "5684bae9-3983-49ea-aecf-5f6aba74xxx"
                    va_number: "1671169xxxx"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /orders/{id}:
    get:
      tags:
        - order
      description: get order
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: orders retrieved sucessfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/product"
              example:
                code: 200
                message: orders retrieved sucessfully
                data:
                  id: 1
                  user_id: 1
                  product_id: 1
                  product_name: "makanan kucing"
                  profile_picture: "www.gambar.com"
                  quantity: 1
                  price: 100000
                  status: "created"
                  invoice_id: "ORDER-09062024-4xxx"
                  payment:
                    id: 1
                    order_id: 1
                    payment_method: "bca"
                    signature_id: "5684bae9-3983-49ea-aecf-5f6aba74xxx"
                    va_number: "1671169xxxx"
        "401":
          $ref: "#/components/responses/401"
        "500":
          $ref: "#/components/responses/500"

  /payments:
    post:
      tags:
        - payment
      description: create payment
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/payment"
            example:
              payment_method: "bca"
              order_id: 1
      responses:
        "201":
          description: payment created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiDataResponse"
              example:
                code: 201
                message: payment created sucessfully
                data:
                  id: 1
                  user_id: 1
                  product_id: 1
                  product_name: "makanan kucing"
                  profile_picture: "www.gambar.com"
                  quantity: 1
                  price: 100000
                  status: "pending"
                  invoice_id: "ORDER-09062024-4xxx"
                  payment:
                    id: 1
                    order_id: 1
                    payment_method: "bca"
                    signature_id: "5684bae9-3983-49ea-aecf-5f6aba74xxx"
                    va_number: "1671169xxxx"

        "401":
          $ref: "#/components/responses/401"
        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        full_name:
          type: string
        email:
          type: string
          format: email
        number_phone:
          type: string
        address:
          type: string
        password:
          type: string
          format: password
        profile_picture:
          type: string
        coordinate:
          type: string

    Admin:
      type: object
      properties:
        id:
          type: integer
        FullName:
          type: string
        VetsName:
          type: string
        Email:
          type: string
          format: email
        NumberPhone:
          type: string
        Adress:
          type: string
        Password:
          type: string
          format: password
        RetypePassword:
          type: string
          format: password
        ProfilePicture:
          type: string

    product:
      type: object
      properties:
        id:
          type: integer
        OwnerName:
          type: string
        ProduckName:
          type: string
        Price:
          type: integer
        Description:
          type: string
        Stock:
          type: integer
        ProductPicture:
          type: string

    clinic:
      type: object
      properties:
        admin_id:
          type: integer
        clinic_name:
          title: string
        open:
          type: object
        service:
          type: string
        veterinary:
          type: string
        location:
          type: string
        coordinate:
          type: string
        distance:
          type: integer

    consultation:
      type: object
      properties:
        id:
          type: integer
        user_details:
          type: object
        doctor_details:
          type: integer
        service:
          type: string
        transaction_status:
          type: string
        consultation_status:
          type: string
        scheduled_date:
          type: string

    ApiDataResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
        data:
          type: object

    Chat:
      type: object
      properties:
        id:
          type: integer
        roomchat_id:
          type: integer
        sender:
          type: object
          properties:
            id:
              type: integer
            role:
              type: string
            full_name:
              type: string
            profile_picture:
              type: string
        receiver:
          type: object
          properties:
            id:
              type: integer
            role:
              type: string
            full_name:
              type: string
            profile_picture:
              type: string
        message:
          type: string
        time_stamp:
          type: string

    Doctor:
      type: object
      properties:
        id:
          type: integer
        full_name:
          type: string
        price:
          type: integer
        about:
          type: string
        profile_picture:
          type: string
        available_days:
          type: object
          properties:
            monday:
              type: string
            tuesday:
              type: string
            wednesday:
              type: string
            thursday:
              type: string
            friday:
              type: string
        services:
          type: object
          properties:
            vaccinations:
              type: string
            operations:
              type: string
            mcu:
              type: string
            online_consultations:
              type: string

    order:
      type: object
      properties:
        product_id:
          type: integer
        quantity:
          type: integer
        id:
          type: integer
        user_id:
          type: integer
        product_name:
          type: string
        product_picture:
          type: string
        price:
          type: integer
        status:
          type: string

    payment:
      type: object
      properties:
        id:
          type: integer
        order_id:
          type: integer
        payment_method:
          type: string
        signature_id:
          type: string
        billing_number:
          type: string
        invoice_id:
          type: string

    ApiResponse:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string

  responses:
    400:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
          example:
            code: 400
            message: Invalid request data
    401:
      description: Unauthorized User
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
          example:
            code: 401
            message: Unauthorized User
    500:
      description: Server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApiResponse"
          example:
            code: 500
            message: Server error
